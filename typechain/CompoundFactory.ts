/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { Compound } from "./Compound";

export class CompoundFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<Compound> {
    return super.deploy(overrides) as Promise<Compound>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): Compound {
    return super.attach(address) as Compound;
  }
  connect(signer: Signer): CompoundFactory {
    return super.connect(signer) as CompoundFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Compound {
    return new Contract(address, _abi, signerOrProvider) as Compound;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256"
      }
    ],
    name: "sum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060b98061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063cad0899b14602d575b600080fd5b606060048036036040811015604157600080fd5b8101908080359060200190929190803590602001909291905050506076565b6040518082815260200191505060405180910390f35b600081830190509291505056fea26469706673582212209e18d48bbf282f9ab3870d8902b4e44e8bbceb854aa17a7a023340cb7d6b789864736f6c63430006020033";
