/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { Counter } from "./Counter";

export class CounterFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<Counter> {
    return super.deploy(overrides) as Promise<Counter>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): Counter {
    return super.attach(address) as Counter;
  }
  connect(signer: Signer): CounterFactory {
    return super.connect(signer) as CounterFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Counter {
    return new Contract(address, _abi, signerOrProvider) as Counter;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [],
    name: "countUp",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "x",
        type: "int256"
      },
      {
        name: "y",
        type: "int256"
      }
    ],
    name: "args",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "countDown",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getCount",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "implementation",
        type: "address"
      },
      {
        name: "params",
        type: "bytes"
      }
    ],
    name: "proxy",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "number",
        type: "uint256"
      }
    ],
    name: "CountedTo",
    type: "event"
  }
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50610dab806100246000396000f3fe60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630bd8599e146100725780631890cf891461009d5780635fcbd5b6146100e2578063a87d942c1461010d578063be6d055a14610138575b600080fd5b34801561007e57600080fd5b50610087610220565b6040518082815260200191505060405180910390f35b3480156100a957600080fd5b506100e0600480360360408110156100c057600080fd5b81019080803590602001909291908035906020019092919050505061032f565b005b3480156100ee57600080fd5b506100f7610371565b6040518082815260200191505060405180910390f35b34801561011957600080fd5b50610122610480565b6040518082815260200191505060405180910390f35b34801561014457600080fd5b5061021e6004803603604081101561015b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561019857600080fd5b8201836020820111156101aa57600080fd5b803590602001918460018302840111640100000000831117156101cc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610489565b005b6000806001600054019050600054811115156102a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f55696e74323536206f766572666c6f770000000000000000000000000000000081525060200191505060405180910390fd5b6102e66040805190810160405280602081526020017f496e6372656173696e6720636f756e7465722066726f6d20256420746f2025648152506000548361056e565b806000819055507fa501f5a8ef1a812bff54fb3642cfaec066c351af1716c48a7bdd05e0bb631e676000546040518082815260200191505060405180910390a160005491505090565b61036d6040805190810160405280600c81526020017f7265616368656420617267730000000000000000000000000000000000000000815250610739565b5050565b6000806001600054039050600054811015156103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f55696e7432353620756e646572666c6f7700000000000000000000000000000081525060200191505060405180910390fd5b6104376040805190810160405280602081526020017f44656372656173696e6720636f756e7465722066726f6d20256420746f2025648152506000548361056e565b806000819055507fa501f5a8ef1a812bff54fb3642cfaec066c351af1716c48a7bdd05e0bb631e676000546040518082815260200191505060405180910390a160005491505090565b60008054905090565b6104c76040805190810160405280600981526020017f0a696e2070726f78790000000000000000000000000000000000000000000000815250610739565b6104d0826108f2565b6104d981610a72565b6000815190506000806000808460208701885af43d6000803e60005192508060008114610509576001925061050e565b600092505b5050816000819055506105556040805190810160405280600981526020017f7375636365656465640000000000000000000000000000000000000000000000815250610739565b61055e81610c2b565b61056782610c2b565b5050505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff168484846040516024018080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b838110156105e45780820151818401526020810190506105c9565b50505050905090810190601f1680156106115780820380516001836020036101000a031916815260200191505b509450505050506040516020818303038152906040527f969cdd03000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831015156106ca57805182526020820191506020810190506020830392506106a5565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461072a576040519150601f19603f3d011682016040523d82523d6000602084013e61072f565b606091505b5050905050505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff16826040516024018080602001828103825283818151815260200191508051906020019080838360005b838110156107a1578082015181840152602081019050610786565b50505050905090810190601f1680156107ce5780820380516001836020036101000a031916815260200191505b50925050506040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831015156108855780518252602082019150602081019050602083039250610860565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146108e5576040519150601f19603f3d011682016040523d82523d6000602084013e6108ea565b606091505b505090505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff1682604051602401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506040516020818303038152906040527f2c2ecbc2000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083101515610a0557805182526020820191506020810190506020830392506109e0565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610a65576040519150601f19603f3d011682016040523d82523d6000602084013e610a6a565b606091505b505090505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff16826040516024018080602001828103825283818151815260200191508051906020019080838360005b83811015610ada578082015181840152602081019050610abf565b50505050905090810190601f168015610b075780820380516001836020036101000a031916815260200191505b50925050506040516020818303038152906040527f0be77f56000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083101515610bbe5780518252602082019150602081019050602083039250610b99565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610c1e576040519150601f19603f3d011682016040523d82523d6000602084013e610c23565b606091505b505090505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff1682604051602401808281526020019150506040516020818303038152906040527ff5b1bba9000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083101515610d125780518252602082019150602081019050602083039250610ced565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610d72576040519150601f19603f3d011682016040523d82523d6000602084013e610d77565b606091505b50509050505056fea165627a7a72305820f552a6d3a4896138939b5e025b9f54ac07861d870de5b75261f5eb186d033de80029";
