/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { Counter } from "./Counter";

export class CounterFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<Counter> {
    return super.deploy(overrides) as Promise<Counter>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): Counter {
    return super.attach(address) as Counter;
  }
  connect(signer: Signer): CounterFactory {
    return super.connect(signer) as CounterFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Counter {
    return new Contract(address, _abi, signerOrProvider) as Counter;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "number",
        type: "uint256"
      }
    ],
    name: "CountedTo",
    type: "event"
  },
  {
    stateMutability: "payable",
    type: "fallback"
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256"
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256"
      }
    ],
    name: "args",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "countDown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "countUp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "getCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes"
      }
    ],
    name: "proxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50610c20806100246000396000f3fe60806040526004361061004e5760003560e01c80630bd8599e146100975780631890cf89146100c25780635fcbd5b614610107578063a87d942c14610132578063be6d055a1461015d5761004f565b5b61008d6040518060400160405280600281526020017f6662000000000000000000000000000000000000000000000000000000000000815250610245565b6100956103fc565b005b3480156100a357600080fd5b506100ac61043c565b6040518082815260200191505060405180910390f35b3480156100ce57600080fd5b50610105600480360360408110156100e557600080fd5b810190808035906020019092919080359060200190929190505050610549565b005b34801561011357600080fd5b5061011c61058b565b6040518082815260200191505060405180910390f35b34801561013e57600080fd5b50610147610698565b6040518082815260200191505060405180910390f35b34801561016957600080fd5b506102436004803603604081101561018057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156101bd57600080fd5b8201836020820111156101cf57600080fd5b803590602001918460018302840111640100000000831117156101f157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506106a1565b005b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff16826040516024018080602001828103825283818151815260200191508051906020019080838360005b838110156102ad578082015181840152602081019050610292565b50505050905090810190601f1680156102da5780820380516001836020036101000a031916815260200191505b50925050506040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061038f578051825260208201915060208101905060208303925061036c565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146103ef576040519150601f19603f3d011682016040523d82523d6000602084013e6103f4565b606091505b505090505050565b61043a6040518060400160405280600881526020017f64656c6567617465000000000000000000000000000000000000000000000000815250610245565b565b600080600160005401905060005481116104be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f55696e74323536206f766572666c6f770000000000000000000000000000000081525060200191505060405180910390fd5b6105006040518060400160405280602081526020017f496e6372656173696e6720636f756e7465722066726f6d20256420746f20256481525060005483610718565b806000819055507fa501f5a8ef1a812bff54fb3642cfaec066c351af1716c48a7bdd05e0bb631e676000546040518082815260200191505060405180910390a160005491505090565b6105876040518060400160405280600c81526020017f7265616368656420617267730000000000000000000000000000000000000000815250610245565b5050565b6000806001600054039050600054811061060d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f55696e7432353620756e646572666c6f7700000000000000000000000000000081525060200191505060405180910390fd5b61064f6040518060400160405280602081526020017f44656372656173696e6720636f756e7465722066726f6d20256420746f20256481525060005483610718565b806000819055507fa501f5a8ef1a812bff54fb3642cfaec066c351af1716c48a7bdd05e0bb631e676000546040518082815260200191505060405180910390a160005491505090565b60008054905090565b6106df6040518060400160405280600881526020017f696e2070726f7879000000000000000000000000000000000000000000000000815250610245565b6000815190506106ee816108e1565b6106f782610a33565b600080825184865af43d6000803e8060008114610713573d6000f35b3d6000fd5b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff168484846040516024018080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b8381101561078e578082015181840152602081019050610773565b50505050905090810190601f1680156107bb5780820380516001836020036101000a031916815260200191505b509450505050506040516020818303038152906040527f969cdd03000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310610872578051825260208201915060208101905060208303925061084f565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146108d2576040519150601f19603f3d011682016040523d82523d6000602084013e6108d7565b606091505b5050905050505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff1682604051602401808281526020019150506040516020818303038152906040527ff5b1bba9000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106109c657805182526020820191506020810190506020830392506109a3565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610a26576040519150601f19603f3d011682016040523d82523d6000602084013e610a2b565b606091505b505090505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff16826040516024018080602001828103825283818151815260200191508051906020019080838360005b83811015610a9b578082015181840152602081019050610a80565b50505050905090810190601f168015610ac85780820380516001836020036101000a031916815260200191505b50925050506040516020818303038152906040527f0be77f56000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310610b7d5780518252602082019150602081019050602083039250610b5a565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610bdd576040519150601f19603f3d011682016040523d82523d6000602084013e610be2565b606091505b50509050505056fea2646970667358221220ac1f80daa1ad3a196ccd1bda531f0a73384a16c8dab30a99f1b2127c5bf2d22a64736f6c63430006020033";
